#!/sbin/openrc-run

iptables_bin="/sbin/${SVCNAME}"
case ${SVCNAME} in
    iptables)  iptables_proc="/proc/net/ip_tables_names"
               iptables_default="/etc/iptables/default_ipv4.rules"
               iptables_save="/var/lib/iptables/saved.rules"
               sysctl_ipfwd=net.ipv4.ip_forward ;;
    ip6tables) iptables_proc="/proc/net/ip6_tables_names"
               iptables_default="/etc/iptables/default_ipv6.rules"
               iptables_save="/var/lib/ip6tables/saved.rules"
               sysctl_ipfwd=net.ipv6.conf.all.forwarding ;;
esac

depend() {
    before net
    after sysctl
    use logger
    provide firewall
}

checkkernel() {
    if [ "${SVCNAME}" = "iptables" ];then
        modprobe -qb ip_tables
    else
        modprobe -qb ip6_tables
    fi

    if [ ! -e "${iptables_proc}" ] ; then
        eerror "Your kernel lacks ${SVCNAME} support, please load"
        eerror "appropriate modules and try again."
        return 1
    fi
    return 0
}

saverules() {
    ebegin "Saving ${SVCNAME} state"
    if [ ! -e "${iptables_save}" ];then
        touch "${iptables_save}"
        chmod 0600 "${iptables_save}"
    fi
    ${iptables_bin}-save ${SAVE_RESTORE_OPTIONS} > "${iptables_save}"
    eend $?
}

start() {
    checkkernel || return 1

    if [ ! -e "${iptables_save}" ];then
        ebegin "Loading default ${SVCNAME} rules"
        ${iptables_bin}-restore ${SAVE_RESTORE_OPTIONS} < "${iptables_default}"
        eend $?

        saverules
    fi

    ebegin "Loading ${SVCNAME} state and starting firewall"
    ${iptables_bin}-restore ${SAVE_RESTORE_OPTIONS} < "${iptables_save}"
    eend $?

    if yesno "${IPFORWARD}"; then
        ebegin "Enabling ${SVCNAME} forwarding"
        /sbin/sysctl -w ${sysctl_ipfwd}=1 > /dev/null
        eend $?
    fi
}

reload() {
    checkkernel || return 1

    ebegin "Flushing ${SVCNAME} firewall"
    local a
    for a in $(cat "${iptables_proc}") ; do
            ${iptables_bin} -F -t $a
            ${iptables_bin} -X -t $a
    done
    eend $?

    start
}

stop() {
    checkkernel || return 1

    if yesno "${IPFORWARD}"; then
        ebegin "Disabling ${SVCNAME} forwarding"
        /sbin/sysctl -w ${sysctl_ipfwd}=0 > /dev/null
        eend $?
    fi

    saverules

    ebegin "Stopping ${SVCNAME} firewall"
    local a
    for a in $(cat ${iptables_proc}) ; do
        # set_table_policy $a ACCEPT

        ${iptables_bin} -F -t $a
        ${iptables_bin} -X -t $a
    done
    eend $?
}
